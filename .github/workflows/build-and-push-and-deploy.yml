# This is a basic workflow to help you get started with Actions

name: Push & Deploy

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-push:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Build the Docker images
        run: docker compose build

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'

      - name: Push the Docker images
        run: docker compose push
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'

  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-push]
    steps:
      - uses: actions/checkout@v3
      
      - name: Create SSH private key
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ../private.key
          sudo chmod 600 ../private.key
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          SSH_KNOWN_HOSTS: ${{ secrets.DEPLOY_SSH_KNOWN_HOSTS }}
          SSH_KEY_PATH: ${{ github.workspace }}/../private.key
      
      - name: Replace version in .env.prod
        run: |
          ssh -t ${{ secrets.DEPLOY_SSH_HOSTNAME }} \
            " \
            cd /home/pi/piWeather && \
            sed -i 's/VERSION=.*/'"$(cat .env | grep VERSION)"'/g' .env.prod \
            "
      
      - name: Pull the latest repository and docker images
        run: |
          ssh -t ${{ secrets.DEPLOY_SSH_HOSTNAME }} \
            " \
            cd /home/pi/piWeather && \
            git checkout main && \
            git pull && \
            docker compose --env-file=.env.prod pull \
            "
          
      - name: Run the latest images
        run: |
          ssh -t ${{ secrets.DEPLOY_SSH_HOSTNAME }} \
            " \
            cd /home/pi/piWeather && \
            docker compose --env-file=.env.prod up -d \
            "
